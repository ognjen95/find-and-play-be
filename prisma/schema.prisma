// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String
  password    String
  description String   @default("")
  image       String   @default("")
  createdAt   DateTime @default(now())
  locationId  String
  reliability Int      @default(100)
  stamina     Int      @default(100)

  clubs  Club[]
  sports String[]
  // sports   Sport[]

  location Location @relation(references: [id], fields: [locationId])

  event Event[]

  adminOfEvents Event[] @relation("admin")

  sentEventRequests   EventRequests[]
  requestsForApproval EventRequests[] @relation("reqForApproval")

  notification Notification[]

  @@unique([email])
}

model Location {
  id     String  @id @default(uuid())
  lng    Float
  lat    Float
  city   String?
  state  String?
  users  User[]
  sports Sport[]
  Event  Event[]
}

model Sport {
  id        String     @id @default(uuid())
  name      String
  // events    Event[]
  clubs     Club[]
  locations Location[]
}

model Event {
  id            String          @id @default(uuid())
  name          String
  description   String
  image         String?
  createdAt     DateTime        @default(now())
  startTime     DateTime
  endTime       DateTime
  sports        String[]
  location      Location        @relation(fields: [locationId], references: [id])
  locationId    String
  eventRequests EventRequests[]
  participants  User[]
  admins        User[]          @relation("admin")
  notification  Notification[]
}

model EventRequests {
  id          String  @id @default(uuid())
  isApproved  Boolean @default(false)
  requestFrom User    @relation(fields: [userId], references: [id])
  requestFor  User[]  @relation("reqForApproval")

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
  userId  String
}

model Notification {
  id      String  @id @default(uuid())
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  isSeen  Boolean @default(false)
}

model Club {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  locationId  String
  sports      Sport[]
  players     User[]
  creatorId   String
}
